'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var xtend = _interopDefault(require('xtend'));
var toDOM = _interopDefault(require('hast-util-to-dom'));
var ns = _interopDefault(require('web-namespaces'));

var htmlXmlnsExpression = new RegExp(" xmlns=\"".concat(ns.html, "\""), 'g');
function stringify(config) {
  var settings = xtend(config, this.data('settings'));

  if (settings.fragment == null) {
    settings.fragment = true;
  }

  this.Compiler = compiler;

  function compiler(tree) {
    var node = toDOM(tree, settings);
    var serialized = new XMLSerializer().serializeToString(node); // XMLSerializer puts xmlns on root elements (typically the document
    // element, but in case of a fragment all of the fragments children).
    // Weâ€™re using the DOM, and we focus on HTML, so we can always remove HTML
    // XMLNS attributes (HTML inside SVG does not need to have an XMLNS).

    return serialized.replace(htmlXmlnsExpression, '');
  }
}

module.exports = stringify;
