{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3InterfaceAdapter = void 0;\n\nvar shim_1 = require(\"../../shim\");\n\nvar Web3InterfaceAdapter = /*#__PURE__*/function () {\n  function Web3InterfaceAdapter() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        provider = _ref.provider,\n        networkType = _ref.networkType;\n\n    _classCallCheck(this, Web3InterfaceAdapter);\n\n    this.web3 = new shim_1.Web3Shim({\n      provider: provider,\n      networkType: networkType\n    });\n  }\n\n  _createClass(Web3InterfaceAdapter, [{\n    key: \"getNetworkId\",\n    value: function getNetworkId() {\n      return this.web3.eth.net.getId();\n    }\n  }, {\n    key: \"getBlock\",\n    value: function getBlock(block) {\n      return this.web3.eth.getBlock(block);\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(tx) {\n      return this.web3.eth.getTransaction(tx);\n    }\n  }, {\n    key: \"getTransactionReceipt\",\n    value: function getTransactionReceipt(tx) {\n      return this.web3.eth.getTransactionReceipt(tx);\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance(address) {\n      return this.web3.eth.getBalance(address);\n    }\n  }, {\n    key: \"getCode\",\n    value: function getCode(address) {\n      return this.web3.eth.getCode(address);\n    }\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return this.web3.eth.getAccounts();\n    }\n  }, {\n    key: \"estimateGas\",\n    value: function estimateGas(transactionConfig) {\n      return this.web3.eth.estimateGas(transactionConfig);\n    }\n  }, {\n    key: \"getBlockNumber\",\n    value: function getBlockNumber() {\n      return this.web3.eth.getBlockNumber();\n    }\n  }]);\n\n  return Web3InterfaceAdapter;\n}();\n\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;","map":{"version":3,"sources":["../../../lib/adapter/web3/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;IAaa,oB;AAGX,kCAAuE;AAAA,mFAAF,EAAE;AAAA,QAAzD,QAAyD,QAAzD,QAAyD;AAAA,QAA/C,WAA+C,QAA/C,WAA+C;;AAAA;;AACrE,SAAK,IAAL,GAAY,IAAI,MAAA,CAAA,QAAJ,CAAa;AAAE,MAAA,QAAQ,EAAR,QAAF;AAAY,MAAA,WAAW,EAAX;AAAZ,KAAb,CAAZ;AACD;;;;WAEM,wBAAY;AACjB,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,GAAd,CAAkB,KAAlB,EAAP;AACD;;;WAEM,kBAAS,KAAT,EAA4B;AACjC,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,QAAd,CAAuB,KAAvB,CAAP;AACD;;;WAEM,wBAAe,EAAf,EAAyB;AAC9B,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,cAAd,CAA6B,EAA7B,CAAP;AACD;;;WAEM,+BAAsB,EAAtB,EAAgC;AACrC,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,qBAAd,CAAoC,EAApC,CAAP;AACD;;;WAEM,oBAAW,OAAX,EAA0B;AAC/B,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,UAAd,CAAyB,OAAzB,CAAP;AACD;;;WAEM,iBAAQ,OAAR,EAAuB;AAC5B,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,CAAsB,OAAtB,CAAP;AACD;;;WAEM,uBAAW;AAChB,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,WAAd,EAAP;AACD;;;WAEM,qBAAY,iBAAZ,EAA0C;AAC/C,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,WAAd,CAA0B,iBAA1B,CAAP;AACD;;;WAEM,0BAAc;AACnB,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,cAAd,EAAP;AACD;;;;;;AAzCH,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Web3InterfaceAdapter = void 0;\nconst shim_1 = require(\"../../shim\");\nclass Web3InterfaceAdapter {\n    constructor({ provider, networkType } = {}) {\n        this.web3 = new shim_1.Web3Shim({ provider, networkType });\n    }\n    getNetworkId() {\n        return this.web3.eth.net.getId();\n    }\n    getBlock(block) {\n        return this.web3.eth.getBlock(block);\n    }\n    getTransaction(tx) {\n        return this.web3.eth.getTransaction(tx);\n    }\n    getTransactionReceipt(tx) {\n        return this.web3.eth.getTransactionReceipt(tx);\n    }\n    getBalance(address) {\n        return this.web3.eth.getBalance(address);\n    }\n    getCode(address) {\n        return this.web3.eth.getCode(address);\n    }\n    getAccounts() {\n        return this.web3.eth.getAccounts();\n    }\n    estimateGas(transactionConfig) {\n        return this.web3.eth.estimateGas(transactionConfig);\n    }\n    getBlockNumber() {\n        return this.web3.eth.getBlockNumber();\n    }\n}\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}