{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar debug = require(\"debug\")(\"provider\");\n\nvar Web3 = require(\"web3\");\n\nvar _require = require(\"@truffle/interface-adapter\"),\n    createInterfaceAdapter = _require.createInterfaceAdapter;\n\nvar wrapper = require(\"./wrapper\");\n\nvar DEFAULT_NETWORK_CHECK_TIMEOUT = 5000;\nmodule.exports = {\n  wrap: function wrap(provider, options) {\n    return wrapper.wrap(provider, options);\n  },\n  create: function create(options) {\n    var provider = this.getProvider(options);\n    return this.wrap(provider, options);\n  },\n  getProvider: function getProvider(options) {\n    var provider;\n\n    if (options.provider && typeof options.provider === \"function\") {\n      provider = options.provider();\n    } else if (options.provider) {\n      provider = options.provider;\n    } else if (options.websockets || /^wss?:\\/\\//.test(options.url)) {\n      provider = new Web3.providers.WebsocketProvider(options.url || \"ws://\" + options.host + \":\" + options.port);\n    } else {\n      provider = new Web3.providers.HttpProvider(options.url || \"http://\".concat(options.host, \":\").concat(options.port), {\n        keepAlive: false\n      });\n    }\n\n    return provider;\n  },\n  testConnection: function testConnection(options) {\n    var networkCheckTimeout, networkType;\n    var networks = options.networks,\n        network = options.network;\n\n    if (networks && networks[network]) {\n      networkCheckTimeout = networks[network].networkCheckTimeout || DEFAULT_NETWORK_CHECK_TIMEOUT;\n      networkType = networks[network].type;\n    } else {\n      networkCheckTimeout = DEFAULT_NETWORK_CHECK_TIMEOUT;\n    }\n\n    var provider = this.getProvider(options);\n    var interfaceAdapter = createInterfaceAdapter({\n      provider: provider,\n      networkType: networkType\n    });\n    return new Promise(function (resolve, reject) {\n      var noResponseFromNetworkCall = setTimeout(function () {\n        var errorMessage = \"There was a timeout while attempting to connect to the network.\" + \"\\n       Check to see that your provider is valid.\\n       If you \" + \"have a slow internet connection, try configuring a longer \" + \"timeout in your Truffle config. Use the \" + \"networks[networkName].networkCheckTimeout property to do this.\";\n        throw new Error(errorMessage);\n      }, networkCheckTimeout);\n      var networkCheckDelay = 1;\n\n      (function networkCheck() {\n        setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return interfaceAdapter.getBlockNumber();\n\n                case 3:\n                  clearTimeout(noResponseFromNetworkCall);\n                  clearTimeout(networkCheck);\n                  return _context.abrupt(\"return\", resolve(true));\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.log(\"> Something went wrong while attempting to connect \" + \"to the network. Check your network configuration.\");\n                  clearTimeout(noResponseFromNetworkCall);\n                  clearTimeout(networkCheck);\n                  return _context.abrupt(\"return\", reject(_context.t0));\n\n                case 14:\n                  networkCheckDelay *= 2;\n                  networkCheck();\n\n                case 16:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        })), networkCheckDelay);\n      })();\n    });\n  }\n};","map":{"version":3,"sources":["/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/@truffle/provider/index.js"],"names":["debug","require","Web3","createInterfaceAdapter","wrapper","DEFAULT_NETWORK_CHECK_TIMEOUT","module","exports","wrap","provider","options","create","getProvider","websockets","test","url","providers","WebsocketProvider","host","port","HttpProvider","keepAlive","testConnection","networkCheckTimeout","networkType","networks","network","type","interfaceAdapter","Promise","resolve","reject","noResponseFromNetworkCall","setTimeout","errorMessage","Error","networkCheckDelay","networkCheck","getBlockNumber","clearTimeout","console","log"],"mappings":"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","sourcesContent":["const debug = require(\"debug\")(\"provider\");\nconst Web3 = require(\"web3\");\nconst { createInterfaceAdapter } = require(\"@truffle/interface-adapter\");\nconst wrapper = require(\"./wrapper\");\nconst DEFAULT_NETWORK_CHECK_TIMEOUT = 5000;\n\nmodule.exports = {\n  wrap: function (provider, options) {\n    return wrapper.wrap(provider, options);\n  },\n\n  create: function (options) {\n    const provider = this.getProvider(options);\n    return this.wrap(provider, options);\n  },\n\n  getProvider: function (options) {\n    let provider;\n    if (options.provider && typeof options.provider === \"function\") {\n      provider = options.provider();\n    } else if (options.provider) {\n      provider = options.provider;\n    } else if (options.websockets || /^wss?:\\/\\//.test(options.url)) {\n      provider = new Web3.providers.WebsocketProvider(\n        options.url || \"ws://\" + options.host + \":\" + options.port\n      );\n    } else {\n      provider = new Web3.providers.HttpProvider(\n        options.url || `http://${options.host}:${options.port}`,\n        { keepAlive: false }\n      );\n    }\n    return provider;\n  },\n\n  testConnection: function (options) {\n    let networkCheckTimeout, networkType;\n    const { networks, network } = options;\n    if (networks && networks[network]) {\n      networkCheckTimeout =\n        networks[network].networkCheckTimeout || DEFAULT_NETWORK_CHECK_TIMEOUT;\n      networkType = networks[network].type;\n    } else {\n      networkCheckTimeout = DEFAULT_NETWORK_CHECK_TIMEOUT;\n    }\n    const provider = this.getProvider(options);\n    const interfaceAdapter = createInterfaceAdapter({ provider, networkType });\n    return new Promise((resolve, reject) => {\n      const noResponseFromNetworkCall = setTimeout(() => {\n        const errorMessage =\n          \"There was a timeout while attempting to connect to the network.\" +\n          \"\\n       Check to see that your provider is valid.\\n       If you \" +\n          \"have a slow internet connection, try configuring a longer \" +\n          \"timeout in your Truffle config. Use the \" +\n          \"networks[networkName].networkCheckTimeout property to do this.\";\n        throw new Error(errorMessage);\n      }, networkCheckTimeout);\n\n      let networkCheckDelay = 1;\n      (function networkCheck() {\n        setTimeout(async () => {\n          try {\n            await interfaceAdapter.getBlockNumber();\n            clearTimeout(noResponseFromNetworkCall);\n            clearTimeout(networkCheck);\n            return resolve(true);\n          } catch (error) {\n            console.log(\n              \"> Something went wrong while attempting to connect \" +\n                \"to the network. Check your network configuration.\"\n            );\n            clearTimeout(noResponseFromNetworkCall);\n            clearTimeout(networkCheck);\n            return reject(error);\n          }\n          networkCheckDelay *= 2;\n          networkCheck();\n        }, networkCheckDelay);\n      })();\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"script"}