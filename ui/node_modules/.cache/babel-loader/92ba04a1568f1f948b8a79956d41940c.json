{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeInternalFunctionId = exports.functionTableEntryToType = void 0;\n\nvar import_1 = require(\"../../contexts/import\"); //creates a type object for the contract the function was defined in\n\n\nfunction functionTableEntryToType(functionEntry) {\n  if (functionEntry.contractNode === null) {\n    //for free functions\n    return null;\n  }\n\n  return {\n    typeClass: \"contract\",\n    kind: \"native\",\n    id: import_1.makeTypeId(functionEntry.contractId, functionEntry.compilationId),\n    typeName: functionEntry.contractName,\n    contractKind: functionEntry.contractKind,\n    payable: functionEntry.contractPayable\n  };\n}\n\nexports.functionTableEntryToType = functionTableEntryToType;\n\nfunction makeInternalFunctionId(functionEntry) {\n  return \"\".concat(functionEntry.compilationId, \":\").concat(functionEntry.id);\n}\n\nexports.makeInternalFunctionId = makeInternalFunctionId;","map":{"version":3,"sources":["../../../../lib/evm/import/index.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,uBAAA,CAAA,C,CAGA;;;AACA,SAAgB,wBAAhB,CACE,aADF,EACiC;AAE/B,MAAI,aAAa,CAAC,YAAd,KAA+B,IAAnC,EAAyC;AACvC;AACA,WAAO,IAAP;AACD;;AACD,SAAO;AACL,IAAA,SAAS,EAAE,UADN;AAEL,IAAA,IAAI,EAAE,QAFD;AAGL,IAAA,EAAE,EAAE,QAAA,CAAA,UAAA,CAAW,aAAa,CAAC,UAAzB,EAAqC,aAAa,CAAC,aAAnD,CAHC;AAIL,IAAA,QAAQ,EAAE,aAAa,CAAC,YAJnB;AAKL,IAAA,YAAY,EAAE,aAAa,CAAC,YALvB;AAML,IAAA,OAAO,EAAE,aAAa,CAAC;AANlB,GAAP;AAQD;;AAfD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAiBA,SAAgB,sBAAhB,CACE,aADF,EACiC;AAE/B,mBAAU,aAAa,CAAC,aAAxB,cAAyC,aAAa,CAAC,EAAvD;AACD;;AAJD,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeInternalFunctionId = exports.functionTableEntryToType = void 0;\nconst import_1 = require(\"../../contexts/import\");\n//creates a type object for the contract the function was defined in\nfunction functionTableEntryToType(functionEntry) {\n    if (functionEntry.contractNode === null) {\n        //for free functions\n        return null;\n    }\n    return {\n        typeClass: \"contract\",\n        kind: \"native\",\n        id: import_1.makeTypeId(functionEntry.contractId, functionEntry.compilationId),\n        typeName: functionEntry.contractName,\n        contractKind: functionEntry.contractKind,\n        payable: functionEntry.contractPayable\n    };\n}\nexports.functionTableEntryToType = functionTableEntryToType;\nfunction makeInternalFunctionId(functionEntry) {\n    return `${functionEntry.compilationId}:${functionEntry.id}`;\n}\nexports.makeInternalFunctionId = makeInternalFunctionId;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}