{"ast":null,"code":"import _toConsumableArray from\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Source from\"./Source\";import unified from\"unified\";import stringify from\"rehype-dom-stringify\";import low from\"lowlight\";import{definer}from\"highlightjs-solidity\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Sources=function Sources(_ref){var sources=_ref.sources,activeTabIndex=_ref.activeTabIndex,breakpoints=_ref.breakpoints,setBreakpoints=_ref.setBreakpoints,activeLine=_ref.activeLine,selectedLine=_ref.selectedLine,runningTabIndex=_ref.runningTabIndex;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),sourcesWithMarkup=_useState2[0],setSourcesWithMarkup=_useState2[1];var sourceComponents=sources.map(function(source,index){var astId=source.ast.id;var fileName=source.sourcePath.replace(/^.*[\\\\/]/,\"\");var highlightedSource=[];if(sourcesWithMarkup.length===0){low.registerLanguage(\"solidity\",definer);var tree=low.highlight(\"solidity\",source.source).value;var processor=unified().use(stringify);var highlightedMarkup=processor.stringify({type:\"root\",children:tree}).toString();highlightedMarkup.split(\"\\n\").forEach(function(lineMarkup){highlightedSource.push(lineMarkup);});setSourcesWithMarkup(function(prevState){return[].concat(_toConsumableArray(prevState),[highlightedSource]);});}return/*#__PURE__*/_jsx(Source,{visible:astId===activeTabIndex,contractSource:highlightedSource.length>0?highlightedSource:sourcesWithMarkup[index],activeLine:activeLine,selectedLine:selectedLine,breakpoints:breakpoints,setBreakpoints:setBreakpoints,sourceIsActive:astId===runningTabIndex,sourceId:source.id,astId:astId,fileName:fileName},\"contract-\".concat(astId));});return/*#__PURE__*/_jsx(_Fragment,{children:sourceComponents});};export default Sources;","map":{"version":3,"sources":["/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/src/components/Sources.tsx"],"names":["React","useState","Source","unified","stringify","low","definer","Sources","sources","activeTabIndex","breakpoints","setBreakpoints","activeLine","selectedLine","runningTabIndex","sourcesWithMarkup","setSourcesWithMarkup","sourceComponents","map","source","index","astId","ast","id","fileName","sourcePath","replace","highlightedSource","length","registerLanguage","tree","highlight","value","processor","use","highlightedMarkup","type","children","toString","split","forEach","lineMarkup","push","prevState"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,UAAhB,CACA,OAASC,OAAT,KAAwB,sBAAxB,C,gGAkBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAQF,IAPZC,CAAAA,OAOY,MAPZA,OAOY,CANZC,cAMY,MANZA,cAMY,CALZC,WAKY,MALZA,WAKY,CAJZC,cAIY,MAJZA,cAIY,CAHZC,UAGY,MAHZA,UAGY,CAFZC,YAEY,MAFZA,YAEY,CADZC,eACY,MADZA,eACY,eACsCb,QAAQ,CAAQ,EAAR,CAD9C,wCACLc,iBADK,eACcC,oBADd,eAGZ,GAAMC,CAAAA,gBAAgB,CAAGT,OAAO,CAACU,GAAR,CAAY,SAACC,MAAD,CAAcC,KAAd,CAAgC,CACnE,GAAMC,CAAAA,KAAK,CAAGF,MAAM,CAACG,GAAP,CAAWC,EAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGL,MAAM,CAACM,UAAP,CAAkBC,OAAlB,CAA0B,UAA1B,CAAsC,EAAtC,CAAjB,CACA,GAAMC,CAAAA,iBAA2B,CAAG,EAApC,CAEA,GAAIZ,iBAAiB,CAACa,MAAlB,GAA6B,CAAjC,CAAoC,CAClCvB,GAAG,CAACwB,gBAAJ,CAAqB,UAArB,CAAiCvB,OAAjC,EACA,GAAMwB,CAAAA,IAAS,CAAGzB,GAAG,CAAC0B,SAAJ,CAAc,UAAd,CAA0BZ,MAAM,CAACA,MAAjC,EAAyCa,KAA3D,CACA,GAAMC,CAAAA,SAAc,CAAG9B,OAAO,GAAG+B,GAAV,CAAc9B,SAAd,CAAvB,CACA,GAAM+B,CAAAA,iBAAsB,CAAGF,SAAS,CACrC7B,SAD4B,CAClB,CAAEgC,IAAI,CAAE,MAAR,CAAgBC,QAAQ,CAAEP,IAA1B,CADkB,EAE5BQ,QAF4B,EAA/B,CAIAH,iBAAiB,CAACI,KAAlB,CAAwB,IAAxB,EAA8BC,OAA9B,CAAsC,SAACC,UAAD,CAAwB,CAC5Dd,iBAAiB,CAACe,IAAlB,CAAuBD,UAAvB,EACD,CAFD,EAIAzB,oBAAoB,CAAC,SAAA2B,SAAS,qCAAQA,SAAR,GAAmBhB,iBAAnB,IAAV,CAApB,CACD,CAED,mBACE,KAAC,MAAD,EAEE,OAAO,CAAEN,KAAK,GAAKZ,cAFrB,CAGE,cAAc,CACZkB,iBAAiB,CAACC,MAAlB,CAA2B,CAA3B,CACID,iBADJ,CAEIZ,iBAAiB,CAACK,KAAD,CANzB,CAQE,UAAU,CAAER,UARd,CASE,YAAY,CAAEC,YAThB,CAUE,WAAW,CAAEH,WAVf,CAWE,cAAc,CAAEC,cAXlB,CAYE,cAAc,CAAEU,KAAK,GAAKP,eAZ5B,CAaE,QAAQ,CAAEK,MAAM,CAACI,EAbnB,CAcE,KAAK,CAAEF,KAdT,CAeE,QAAQ,CAAEG,QAfZ,qBACmBH,KADnB,EADF,CAmBD,CAvCwB,CAAzB,CAyCA,mBAAO,yBAAGJ,gBAAH,EAAP,CACD,CArDD,CAuDA,cAAeV,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Source from \"./Source\";\nimport unified from \"unified\";\nimport stringify from \"rehype-dom-stringify\";\nimport low from \"lowlight\";\nimport { definer } from \"highlightjs-solidity\";\n\ninterface IProps {\n  sources: any;\n  activeTabIndex: number;\n  breakpoints: any[];\n  setBreakpoints: any;\n  activeLine: number;\n  selectedLine: number;\n  runningTabIndex: number;\n}\n\ninterface IPropsRenderer {\n  rows: any;\n  stylesheet: any;\n  useInlineStyles: any;\n}\n\nconst Sources = ({\n  sources,\n  activeTabIndex,\n  breakpoints,\n  setBreakpoints,\n  activeLine,\n  selectedLine,\n  runningTabIndex,\n}: IProps) => {\n  const [sourcesWithMarkup, setSourcesWithMarkup] = useState<any[]>([]);\n\n  const sourceComponents = sources.map((source: any, index: number) => {\n    const astId = source.ast.id;\n    const fileName = source.sourcePath.replace(/^.*[\\\\/]/, \"\");\n    const highlightedSource: string[] = [];\n\n    if (sourcesWithMarkup.length === 0) {\n      low.registerLanguage(\"solidity\", definer);\n      const tree: any = low.highlight(\"solidity\", source.source).value;\n      const processor: any = unified().use(stringify);\n      const highlightedMarkup: any = processor\n        .stringify({ type: \"root\", children: tree })\n        .toString();\n\n      highlightedMarkup.split(\"\\n\").forEach((lineMarkup: string) => {\n        highlightedSource.push(lineMarkup);\n      });\n\n      setSourcesWithMarkup(prevState => [...prevState, highlightedSource]);\n    }\n\n    return (\n      <Source\n        key={`contract-${astId}`}\n        visible={astId === activeTabIndex}\n        contractSource={\n          highlightedSource.length > 0\n            ? highlightedSource\n            : sourcesWithMarkup[index]\n        }\n        activeLine={activeLine}\n        selectedLine={selectedLine}\n        breakpoints={breakpoints}\n        setBreakpoints={setBreakpoints}\n        sourceIsActive={astId === runningTabIndex}\n        sourceId={source.id}\n        astId={astId}\n        fileName={fileName}\n      />\n    );\n  });\n\n  return <>{sourceComponents}</>;\n};\n\nexport default Sources;\n"]},"metadata":{},"sourceType":"module"}