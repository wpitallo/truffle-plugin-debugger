{"ast":null,"code":"import _slicedToArray from\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{createRef,useRef,useEffect,useState,useLayoutEffect}from\"react\";import styled from\"styled-components\";import SyntaxStyle from\"./SyntaxStyle\";import Line from\"./Line\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SourceWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 1rem 0.5rem;\\n  overflow-x: scroll;\\n  overflow-y: scroll;\\n  white-space: nowrap;\\n\"])));var Source=function Source(_ref){var activeLine=_ref.activeLine,selectedLine=_ref.selectedLine,contractSource=_ref.contractSource,breakpoints=_ref.breakpoints,setBreakpoints=_ref.setBreakpoints,visible=_ref.visible,sourceIsActive=_ref.sourceIsActive,sourceId=_ref.sourceId,fileName=_ref.fileName,astId=_ref.astId;var output=[];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),scrollTop=_useState2[0],setScrollTop=_useState2[1];var sourceRef=useRef(null);var lineDigitLength=contractSource.length.toString().length;var selectedLineRef;contractSource.forEach(function(line){var lineRef=/*#__PURE__*/createRef();if(output.length===selectedLine){selectedLineRef=lineRef;}output.push(/*#__PURE__*/_jsx(Line,{lineNumber:output.length,lineContents:line,isCurrent:sourceIsActive&&output.length===activeLine,breakpoints:breakpoints,setBreakpoints:setBreakpoints,lineRef:lineRef,sourceId:sourceId,fileName:fileName,astId:astId,lineNumberIndentLength:lineDigitLength-(output.length+1).toString().length},\"contract-source-\".concat(output.length)));});useEffect(function(){if(selectedLineRef){if(selectedLineRef.current){selectedLineRef.current.scrollIntoView({behavior:\"auto\",block:\"center\"});}}},[selectedLine]);useLayoutEffect(function(){if(visible){if(sourceRef.current!==null){sourceRef.current.scrollTo({top:scrollTop,left:0,behavior:\"auto\"});}}},[visible]);var updateLine=function updateLine(e){setScrollTop(e.target.scrollTop);};return/*#__PURE__*/_jsx(_Fragment,{children:visible?/*#__PURE__*/_jsx(SourceWrapper,{onScroll:updateLine,ref:sourceRef,children:/*#__PURE__*/_jsx(SyntaxStyle,{children:output})}):null});};export default Source;","map":{"version":3,"sources":["/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/src/components/Source.tsx"],"names":["React","createRef","useRef","useEffect","useState","useLayoutEffect","styled","SyntaxStyle","Line","SourceWrapper","div","Source","activeLine","selectedLine","contractSource","breakpoints","setBreakpoints","visible","sourceIsActive","sourceId","fileName","astId","output","scrollTop","setScrollTop","sourceRef","lineDigitLength","length","toString","selectedLineRef","forEach","line","lineRef","push","current","scrollIntoView","behavior","block","scrollTo","top","left","updateLine","e","target"],"mappings":"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","sourcesContent":["import React, {\n  createRef,\n  useRef,\n  useEffect,\n  useState,\n  useLayoutEffect,\n} from \"react\";\nimport styled from \"styled-components\";\nimport SyntaxStyle from \"./SyntaxStyle\";\nimport Line from \"./Line\";\n\nconst SourceWrapper = styled.div`\n  padding: 1rem 0.5rem;\n  overflow-x: scroll;\n  overflow-y: scroll;\n  white-space: nowrap;\n`;\n\ninterface IProps {\n  activeLine: number;\n  selectedLine: number;\n  contractSource: string[];\n  breakpoints: any[];\n  setBreakpoints: any;\n  visible: boolean;\n  sourceIsActive: boolean;\n  sourceId: string;\n  fileName: string;\n  astId: number;\n}\n\nconst Source = ({\n  activeLine,\n  selectedLine,\n  contractSource,\n  breakpoints,\n  setBreakpoints,\n  visible,\n  sourceIsActive,\n  sourceId,\n  fileName,\n  astId,\n}: IProps) => {\n  const output: React.ReactNode[] = [];\n  const [scrollTop, setScrollTop] = useState(0);\n  const sourceRef = useRef<HTMLDivElement>(null);\n  const lineDigitLength = contractSource.length.toString().length;\n\n  let selectedLineRef: any;\n\n  contractSource.forEach((line: string) => {\n    const lineRef = createRef();\n    if (output.length === selectedLine) {\n      selectedLineRef = lineRef;\n    }\n    output.push(\n      <Line\n        lineNumber={output.length}\n        lineContents={line}\n        isCurrent={sourceIsActive && output.length === activeLine}\n        breakpoints={breakpoints}\n        setBreakpoints={setBreakpoints}\n        key={`contract-source-${output.length}`}\n        lineRef={lineRef}\n        sourceId={sourceId}\n        fileName={fileName}\n        astId={astId}\n        lineNumberIndentLength={\n          lineDigitLength - (output.length + 1).toString().length\n        }\n      />\n    );\n  });\n\n  useEffect(() => {\n    if (selectedLineRef) {\n      if (selectedLineRef.current) {\n        selectedLineRef.current.scrollIntoView({\n          behavior: \"auto\",\n          block: \"center\",\n        });\n      }\n    }\n  }, [selectedLine]);\n\n  useLayoutEffect(() => {\n    if (visible) {\n      if (sourceRef.current !== null) {\n        sourceRef.current.scrollTo({\n          top: scrollTop,\n          left: 0,\n          behavior: \"auto\",\n        });\n      }\n    }\n  }, [visible]);\n\n  const updateLine = (e: any) => {\n    setScrollTop(e.target.scrollTop);\n  };\n\n  return (\n    <>\n      {visible ? (\n        <SourceWrapper onScroll={updateLine} ref={sourceRef}>\n          <SyntaxStyle>{output}</SyntaxStyle>\n        </SourceWrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport default Source;\n"]},"metadata":{},"sourceType":"module"}