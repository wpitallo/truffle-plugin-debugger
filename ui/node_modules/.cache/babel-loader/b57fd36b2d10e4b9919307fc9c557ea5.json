{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import styled from\"styled-components\";import StyledTab from\"../styles/Tab\";import*as Colors from\"../styles/colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TabButton=styled(StyledTab)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border-color: \",\" !important;\\n  color: inherit;\\n  text-transform: none;\\n\\n  &:hover {\\n    background: \",\";\\n    color: \",\";\\n    * {\\n      color: \",\";\\n    }\\n  }\\n\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  flex-basis: auto;\\n  position: relative;\\n\"])),function(_ref){var activeTabIndex=_ref.activeTabIndex,index=_ref.index;return activeTabIndex===index?\"\".concat(Colors.TEAL_2):\"\".concat(Colors.WHITE);},Colors.TEAL_1,Colors.TEAL_1,Colors.WHITE,Colors.WHITE);var ActiveIcon=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 0.6em;\\n  vertical-align: middle;\\n  position: absolute;\\n  right: 0.6rem;\\n  top: 0.9rem;\\n\"])),Colors.ORANGE_400);var Tab=function Tab(_ref2){var index=_ref2.index,tabName=_ref2.tabName,activeTabIndex=_ref2.activeTabIndex,setActiveTabIndex=_ref2.setActiveTabIndex,tabIsRunning=_ref2.tabIsRunning;return/*#__PURE__*/ (// <Tooltip placement=\"top\" overlay={<span>{tabName}</span>}>\n_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(TabButton,{onClick:function onClick(){return setActiveTabIndex(index);},selected:activeTabIndex===index,activeTabIndex:activeTabIndex,index:index,children:[tabName,\" \",tabIsRunning?/*#__PURE__*/_jsx(ActiveIcon,{className:\"fas fa-dot-circle\"}):null]})})// </Tooltip>\n);};export default Tab;","map":{"version":3,"sources":["/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/src/components/Tab.tsx"],"names":["React","styled","StyledTab","Colors","TabButton","activeTabIndex","index","TEAL_2","WHITE","TEAL_1","ActiveIcon","div","ORANGE_400","Tab","tabName","setActiveTabIndex","tabIsRunning"],"mappings":"+QAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,CAEA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,kBAAxB,C,6IAOA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACC,SAAD,CAAT,yXACC,kBAAGG,CAAAA,cAAH,MAAGA,cAAH,CAAmBC,KAAnB,MAAmBA,KAAnB,OACZD,CAAAA,cAAc,GAAKC,KAAnB,WAA8BH,MAAM,CAACI,MAArC,YAAmDJ,MAAM,CAACK,KAA1D,CADY,EADD,CAGGL,MAAM,CAACM,MAHV,CAQGN,MAAM,CAACM,MARV,CASFN,MAAM,CAACK,KATL,CAWAL,MAAM,CAACK,KAXP,CAAf,CAsBA,GAAME,CAAAA,UAAU,CAAGT,MAAM,CAACU,GAAV,6LACLR,MAAM,CAACS,UADF,CAAhB,CAiBA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,OAME,IALZP,CAAAA,KAKY,OALZA,KAKY,CAJZQ,OAIY,OAJZA,OAIY,CAHZT,cAGY,OAHZA,cAGY,CAFZU,iBAEY,OAFZA,iBAEY,CADZC,YACY,OADZA,YACY,CACZ,oBACE;AACA,sCACE,MAAC,SAAD,EACE,OAAO,CAAE,yBAAMD,CAAAA,iBAAiB,CAACT,KAAD,CAAvB,EADX,CAEE,QAAQ,CAAED,cAAc,GAAKC,KAF/B,CAGE,cAAc,CAAED,cAHlB,CAIE,KAAK,CAAEC,KAJT,WAMGQ,OANH,CAMY,GANZ,CAOGE,YAAY,cAAG,KAAC,UAAD,EAAY,SAAS,CAAC,mBAAtB,EAAH,CAAkD,IAPjE,GADF,EAWA;AAbF,EAeD,CAtBD,CAwBA,cAAeH,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport StyledTab from \"../styles/Tab\";\nimport Tooltip from \"../styles/Tooltip\";\nimport * as Colors from \"../styles/colors\";\n\ninterface IIndexProps {\n  activeTabIndex: number;\n  index: number;\n}\n\nconst TabButton = styled(StyledTab)`\n  background: ${({ activeTabIndex, index }: IIndexProps) =>\n    activeTabIndex === index ? `${Colors.TEAL_2}` : `${Colors.WHITE}`};\n  border-color: ${Colors.TEAL_1} !important;\n  color: inherit;\n  text-transform: none;\n\n  &:hover {\n    background: ${Colors.TEAL_1};\n    color: ${Colors.WHITE};\n    * {\n      color: ${Colors.WHITE};\n    }\n  }\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-basis: auto;\n  position: relative;\n`;\n\nconst ActiveIcon = styled.div`\n  color: ${Colors.ORANGE_400};\n  font-size: 0.6em;\n  vertical-align: middle;\n  position: absolute;\n  right: 0.6rem;\n  top: 0.9rem;\n`;\n\ninterface IProps {\n  index: number;\n  tabName: string;\n  activeTabIndex: number;\n  setActiveTabIndex: any;\n  tabIsRunning: boolean;\n}\n\nconst Tab = ({\n  index,\n  tabName,\n  activeTabIndex,\n  setActiveTabIndex,\n  tabIsRunning,\n}: IProps) => {\n  return (\n    // <Tooltip placement=\"top\" overlay={<span>{tabName}</span>}>\n    <>\n      <TabButton\n        onClick={() => setActiveTabIndex(index)}\n        selected={activeTabIndex === index}\n        activeTabIndex={activeTabIndex}\n        index={index}\n      >\n        {tabName}{\" \"}\n        {tabIsRunning ? <ActiveIcon className=\"fas fa-dot-circle\" /> : null}\n      </TabButton>\n    </>\n    // </Tooltip>\n  );\n};\n\nexport default Tab;\n"]},"metadata":{},"sourceType":"module"}