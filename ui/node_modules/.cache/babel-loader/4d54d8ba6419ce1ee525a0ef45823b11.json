{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decode),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(decodeDispatch);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:decode\");\n\nvar AstConstant = __importStar(require(\"./ast-constant\"));\n\nvar AbiData = __importStar(require(\"./abi-data\"));\n\nvar Format = __importStar(require(\"./format\"));\n\nvar Basic = __importStar(require(\"./basic\"));\n\nvar Memory = __importStar(require(\"./memory\"));\n\nvar Special = __importStar(require(\"./special\"));\n\nvar Stack = __importStar(require(\"./stack\"));\n\nvar Storage = __importStar(require(\"./storage\"));\n\nvar Topic = __importStar(require(\"./topic\"));\n\nfunction decode(dataType, pointer, info) {\n  var options,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function decode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n          _context.t0 = Format.Utils.Circularity;\n          return _context.delegateYield(decodeDispatch(dataType, pointer, info, options), \"t1\", 3);\n\n        case 3:\n          _context.t2 = _context.t1;\n          return _context.abrupt(\"return\", _context.t0.tie.call(_context.t0, _context.t2));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.default = decode;\n\nfunction decodeDispatch(dataType, pointer, info) {\n  var options,\n      _args2 = arguments;\n  return _regeneratorRuntime.wrap(function decodeDispatch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};\n          debug(\"type %O\", dataType);\n          debug(\"pointer %O\", pointer);\n          _context2.t0 = pointer.location;\n          _context2.next = _context2.t0 === \"storage\" ? 6 : _context2.t0 === \"stack\" ? 8 : _context2.t0 === \"stackliteral\" ? 10 : _context2.t0 === \"definition\" ? 12 : _context2.t0 === \"special\" ? 14 : _context2.t0 === \"calldata\" ? 16 : _context2.t0 === \"eventdata\" ? 16 : _context2.t0 === \"returndata\" ? 16 : _context2.t0 === \"eventtopic\" ? 18 : _context2.t0 === \"code\" ? 20 : _context2.t0 === \"nowhere\" ? 20 : _context2.t0 === \"memory\" ? 22 : 24;\n          break;\n\n        case 6:\n          return _context2.delegateYield(Storage.Decode.decodeStorage(dataType, pointer, info), \"t1\", 7);\n\n        case 7:\n          return _context2.abrupt(\"return\", _context2.t1);\n\n        case 8:\n          return _context2.delegateYield(Stack.Decode.decodeStack(dataType, pointer, info), \"t2\", 9);\n\n        case 9:\n          return _context2.abrupt(\"return\", _context2.t2);\n\n        case 10:\n          return _context2.delegateYield(Stack.Decode.decodeLiteral(dataType, pointer, info), \"t3\", 11);\n\n        case 11:\n          return _context2.abrupt(\"return\", _context2.t3);\n\n        case 12:\n          return _context2.delegateYield(AstConstant.Decode.decodeConstant(dataType, pointer, info), \"t4\", 13);\n\n        case 13:\n          return _context2.abrupt(\"return\", _context2.t4);\n\n        case 14:\n          return _context2.delegateYield(Special.Decode.decodeSpecial(dataType, pointer, info), \"t5\", 15);\n\n        case 15:\n          return _context2.abrupt(\"return\", _context2.t5);\n\n        case 16:\n          return _context2.delegateYield(AbiData.Decode.decodeAbi(dataType, pointer, info, options), \"t6\", 17);\n\n        case 17:\n          return _context2.abrupt(\"return\", _context2.t6);\n\n        case 18:\n          return _context2.delegateYield(Topic.Decode.decodeTopic(dataType, pointer, info, options), \"t7\", 19);\n\n        case 19:\n          return _context2.abrupt(\"return\", _context2.t7);\n\n        case 20:\n          return _context2.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info, Object.assign(Object.assign({}, options), {\n            paddingMode: \"zero\"\n          })), \"t8\", 21);\n\n        case 21:\n          return _context2.abrupt(\"return\", _context2.t8);\n\n        case 22:\n          return _context2.delegateYield(Memory.Decode.decodeMemory(dataType, pointer, info, Object.assign(Object.assign({}, options), {\n            paddingMode: \"right\"\n          })), \"t9\", 23);\n\n        case 23:\n          return _context2.abrupt(\"return\", _context2.t9);\n\n        case 24:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["../../lib/decode.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = debug_1.default(\"codec:decode\");\nconst AstConstant = __importStar(require(\"./ast-constant\"));\nconst AbiData = __importStar(require(\"./abi-data\"));\nconst Format = __importStar(require(\"./format\"));\nconst Basic = __importStar(require(\"./basic\"));\nconst Memory = __importStar(require(\"./memory\"));\nconst Special = __importStar(require(\"./special\"));\nconst Stack = __importStar(require(\"./stack\"));\nconst Storage = __importStar(require(\"./storage\"));\nconst Topic = __importStar(require(\"./topic\"));\nfunction* decode(dataType, pointer, info, options = {}) {\n    return Format.Utils.Circularity.tie(yield* decodeDispatch(dataType, pointer, info, options));\n}\nexports.default = decode;\nfunction* decodeDispatch(dataType, pointer, info, options = {}) {\n    debug(\"type %O\", dataType);\n    debug(\"pointer %O\", pointer);\n    switch (pointer.location) {\n        case \"storage\":\n            return yield* Storage.Decode.decodeStorage(dataType, pointer, info);\n        case \"stack\":\n            return yield* Stack.Decode.decodeStack(dataType, pointer, info);\n        case \"stackliteral\":\n            return yield* Stack.Decode.decodeLiteral(dataType, pointer, info);\n        case \"definition\":\n            return yield* AstConstant.Decode.decodeConstant(dataType, pointer, info);\n        case \"special\":\n            return yield* Special.Decode.decodeSpecial(dataType, pointer, info);\n        case \"calldata\":\n        case \"eventdata\":\n        case \"returndata\":\n            return yield* AbiData.Decode.decodeAbi(dataType, pointer, info, options);\n        case \"eventtopic\":\n            return yield* Topic.Decode.decodeTopic(dataType, pointer, info, options);\n        case \"code\":\n        case \"nowhere\":\n            //currently only basic types can go in code, so we'll dispatch directly to decodeBasic\n            //(if it's a nowhere pointer, this will return an error result, of course)\n            //also: we force zero-padding!\n            return yield* Basic.Decode.decodeBasic(dataType, pointer, info, Object.assign(Object.assign({}, options), { paddingMode: \"zero\" }));\n        case \"memory\":\n            //this case -- decoding something that resides *directly* in memory,\n            //rather than located via a pointer -- only comes up when decoding immutables\n            //in a constructor.  thus, we turn on the forceRightPadding option.\n            return yield* Memory.Decode.decodeMemory(dataType, pointer, info, Object.assign(Object.assign({}, options), { paddingMode: \"right\" }));\n    }\n}\n//# sourceMappingURL=decode.js.map"]},"metadata":{},"sourceType":"script"}