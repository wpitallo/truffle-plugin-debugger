{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decodeTopic);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeTopic = void 0;\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:topic:decode\");\n\nvar read_1 = __importDefault(require(\"../../read\"));\n\nvar Basic = __importStar(require(\"../../basic\"));\n\nvar Format = __importStar(require(\"../../format\"));\n\nvar Conversion = __importStar(require(\"../../conversion\"));\n\nfunction decodeTopic(dataType, pointer, info) {\n  var options,\n      bytes,\n      raw,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function decodeTopic$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n\n          if (!(Format.Types.isReferenceType(dataType) || dataType.typeClass === \"tuple\")) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.delegateYield(read_1.default(pointer, info.state), \"t0\", 3);\n\n        case 3:\n          bytes = _context.t0;\n          raw = Conversion.toHexString(bytes); //NOTE: even in strict mode we want to just return this, not throw an error here\n\n          return _context.abrupt(\"return\", {\n            //dunno why TS is failing here\n            type: dataType,\n            kind: \"error\",\n            error: {\n              kind: \"IndexedReferenceTypeError\",\n              type: dataType,\n              raw: raw\n            }\n          });\n\n        case 6:\n          return _context.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info, options), \"t1\", 7);\n\n        case 7:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.decodeTopic = decodeTopic;","map":{"version":3,"sources":["../../../../lib/topic/decode/index.ts"],"names":[],"mappings":";;;;oDAWiB,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXjB,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAY,oBAAZ,CAAd;;AAEA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,YAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAKA,SAAiB,WAAjB,CACE,QADF,EAEE,OAFF,EAGE,IAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIE,UAAA,OAJF,2DAI4B,EAJ5B;;AAAA,gBAOI,MAAM,CAAC,KAAP,CAAa,eAAb,CAA6B,QAA7B,KACA,QAAQ,CAAC,SAAT,KAAuB,OAR3B;AAAA;AAAA;AAAA;;AAW4B,wCAAO,MAAA,CAAA,OAAA,CAAK,OAAL,EAAc,IAAI,CAAC,KAAnB,CAAP;;AAX5B;AAWQ,UAAA,KAXR;AAYQ,UAAA,GAZR,GAYsB,UAAU,CAAC,WAAX,CAAuB,KAAvB,CAZtB,EAaI;;AAbJ,2CAcsC;AAChC;AACA,YAAA,IAAI,EAAE,QAF0B;AAGhC,YAAA,IAAI,EAAE,OAH0B;AAIhC,YAAA,KAAK,EAAE;AACL,cAAA,IAAI,EAAE,2BADD;AAEL,cAAA,IAAI,EAAE,QAFD;AAGL,cAAA,GAAG,EAAH;AAHK;AAJyB,WAdtC;;AAAA;AA0BS,wCAAO,KAAK,CAAC,MAAN,CAAa,WAAb,CAAyB,QAAzB,EAAmC,OAAnC,EAA4C,IAA5C,EAAkD,OAAlD,CAAP;;AA1BT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeTopic = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = debug_1.default(\"codec:topic:decode\");\nconst read_1 = __importDefault(require(\"../../read\"));\nconst Basic = __importStar(require(\"../../basic\"));\nconst Format = __importStar(require(\"../../format\"));\nconst Conversion = __importStar(require(\"../../conversion\"));\nfunction* decodeTopic(dataType, pointer, info, options = {}) {\n    if (Format.Types.isReferenceType(dataType) ||\n        dataType.typeClass === \"tuple\") {\n        //we cannot decode reference types \"stored\" in topics; we have to just return an error\n        let bytes = yield* read_1.default(pointer, info.state);\n        let raw = Conversion.toHexString(bytes);\n        //NOTE: even in strict mode we want to just return this, not throw an error here\n        return {\n            //dunno why TS is failing here\n            type: dataType,\n            kind: \"error\",\n            error: {\n                kind: \"IndexedReferenceTypeError\",\n                type: dataType,\n                raw\n            }\n        };\n    }\n    //otherwise, dispatch to decodeBasic\n    return yield* Basic.Decode.decodeBasic(dataType, pointer, info, options);\n}\nexports.decodeTopic = decodeTopic;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}