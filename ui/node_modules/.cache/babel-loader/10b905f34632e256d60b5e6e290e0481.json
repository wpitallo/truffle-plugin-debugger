{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decodeSpecial),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(decodeMagic);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeMagic = exports.decodeSpecial = void 0;\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:special:decode\");\n\nvar Basic = __importStar(require(\"../../basic\"));\n\nvar Bytes = __importStar(require(\"../../bytes\"));\n\nvar Compiler = __importStar(require(\"../../compiler\"));\n\nvar Evm = __importStar(require(\"../../evm\"));\n\nfunction decodeSpecial(dataType, pointer, info) {\n  return _regeneratorRuntime.wrap(function decodeSpecial$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(dataType.typeClass === \"magic\")) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.delegateYield(decodeMagic(dataType, pointer, info), \"t0\", 2);\n\n        case 2:\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 5:\n          return _context.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info), \"t1\", 6);\n\n        case 6:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.decodeSpecial = decodeSpecial;\n\nfunction decodeMagic(dataType, pointer, info) {\n  var state, block, variables, _i, _variables, variable;\n\n  return _regeneratorRuntime.wrap(function decodeMagic$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          state = info.state;\n          _context2.t0 = pointer.special;\n          _context2.next = _context2.t0 === \"msg\" ? 4 : _context2.t0 === \"tx\" ? 15 : _context2.t0 === \"block\" ? 22 : 35;\n          break;\n\n        case 4:\n          _context2.t1 = dataType;\n          return _context2.delegateYield(Bytes.Decode.decodeBytes({\n            typeClass: \"bytes\",\n            kind: \"dynamic\",\n            location: \"calldata\"\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: state.calldata.length\n          }, info), \"t2\", 6);\n\n        case 6:\n          _context2.t3 = _context2.t2;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"bytes\",\n            kind: \"static\",\n            length: Evm.Utils.SELECTOR_SIZE\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: Evm.Utils.SELECTOR_SIZE\n          }, info), \"t4\", 8);\n\n        case 8:\n          _context2.t5 = _context2.t4;\n          return _context2.delegateYield(Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"sender\"\n          }, info), \"t6\", 10);\n\n        case 10:\n          _context2.t7 = _context2.t6;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"value\"\n          }, info), \"t8\", 12);\n\n        case 12:\n          _context2.t9 = _context2.t8;\n          _context2.t10 = {\n            data: _context2.t3,\n            sig: _context2.t5,\n            sender: _context2.t7,\n            value: _context2.t9\n          };\n          return _context2.abrupt(\"return\", {\n            type: _context2.t1,\n            kind: \"value\",\n            value: _context2.t10\n          });\n\n        case 15:\n          _context2.t11 = dataType;\n          return _context2.delegateYield(Basic.Decode.decodeBasic(externalAddressType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"origin\"\n          }, info), \"t12\", 17);\n\n        case 17:\n          _context2.t13 = _context2.t12;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"gasprice\"\n          }, info), \"t14\", 19);\n\n        case 19:\n          _context2.t15 = _context2.t14;\n          _context2.t16 = {\n            origin: _context2.t13,\n            gasprice: _context2.t15\n          };\n          return _context2.abrupt(\"return\", {\n            type: _context2.t11,\n            kind: \"value\",\n            value: _context2.t16\n          });\n\n        case 22:\n          return _context2.delegateYield(Basic.Decode.decodeBasic(externalAddressType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"coinbase\"\n          }, info), \"t17\", 23);\n\n        case 23:\n          _context2.t18 = _context2.t17;\n          block = {\n            coinbase: _context2.t18\n          };\n          //the other ones are all uint's, so let's handle them all at once; due to\n          //the lack of generator arrow functions, we do it by mutating block\n          variables = [\"difficulty\", \"gaslimit\", \"number\", \"timestamp\"];\n          _i = 0, _variables = variables;\n\n        case 27:\n          if (!(_i < _variables.length)) {\n            _context2.next = 34;\n            break;\n          }\n\n          variable = _variables[_i];\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: variable\n          }, info), \"t19\", 30);\n\n        case 30:\n          block[variable] = _context2.t19;\n\n        case 31:\n          _i++;\n          _context2.next = 27;\n          break;\n\n        case 34:\n          return _context2.abrupt(\"return\", {\n            type: dataType,\n            kind: \"value\",\n            value: block\n          });\n\n        case 35:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexports.decodeMagic = decodeMagic; //NOTE: this is likely going to change again in 0.7.x!  be ready!\n\nfunction senderType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n  }\n}\n\nfunction externalAddressType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n  }\n}","map":{"version":3,"sources":["../../../../lib/special/decode/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeMagic = exports.decodeSpecial = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = debug_1.default(\"codec:special:decode\");\nconst Basic = __importStar(require(\"../../basic\"));\nconst Bytes = __importStar(require(\"../../bytes\"));\nconst Compiler = __importStar(require(\"../../compiler\"));\nconst Evm = __importStar(require(\"../../evm\"));\nfunction* decodeSpecial(dataType, pointer, info) {\n    if (dataType.typeClass === \"magic\") {\n        return yield* decodeMagic(dataType, pointer, info);\n    }\n    else {\n        return yield* Basic.Decode.decodeBasic(dataType, pointer, info);\n    }\n}\nexports.decodeSpecial = decodeSpecial;\nfunction* decodeMagic(dataType, pointer, info) {\n    let { state } = info;\n    switch (pointer.special) {\n        case \"msg\":\n            return {\n                type: dataType,\n                kind: \"value\",\n                value: {\n                    data: yield* Bytes.Decode.decodeBytes({\n                        typeClass: \"bytes\",\n                        kind: \"dynamic\",\n                        location: \"calldata\"\n                    }, {\n                        location: \"calldata\",\n                        start: 0,\n                        length: state.calldata.length\n                    }, info),\n                    sig: yield* Basic.Decode.decodeBasic({\n                        typeClass: \"bytes\",\n                        kind: \"static\",\n                        length: Evm.Utils.SELECTOR_SIZE\n                    }, {\n                        location: \"calldata\",\n                        start: 0,\n                        length: Evm.Utils.SELECTOR_SIZE\n                    }, info),\n                    sender: yield* Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), { location: \"special\", special: \"sender\" }, info),\n                    value: yield* Basic.Decode.decodeBasic({\n                        typeClass: \"uint\",\n                        bits: 256\n                    }, { location: \"special\", special: \"value\" }, info)\n                }\n            };\n        case \"tx\":\n            return {\n                type: dataType,\n                kind: \"value\",\n                value: {\n                    origin: yield* Basic.Decode.decodeBasic(externalAddressType(info.currentContext.compiler), { location: \"special\", special: \"origin\" }, info),\n                    gasprice: yield* Basic.Decode.decodeBasic({\n                        typeClass: \"uint\",\n                        bits: 256\n                    }, { location: \"special\", special: \"gasprice\" }, info)\n                }\n            };\n        case \"block\":\n            let block = {\n                coinbase: yield* Basic.Decode.decodeBasic(externalAddressType(info.currentContext.compiler), { location: \"special\", special: \"coinbase\" }, info)\n            };\n            //the other ones are all uint's, so let's handle them all at once; due to\n            //the lack of generator arrow functions, we do it by mutating block\n            const variables = [\"difficulty\", \"gaslimit\", \"number\", \"timestamp\"];\n            for (let variable of variables) {\n                block[variable] = yield* Basic.Decode.decodeBasic({\n                    typeClass: \"uint\",\n                    bits: 256\n                }, { location: \"special\", special: variable }, info);\n            }\n            return {\n                type: dataType,\n                kind: \"value\",\n                value: block\n            };\n    }\n}\nexports.decodeMagic = decodeMagic;\n//NOTE: this is likely going to change again in 0.7.x!  be ready!\nfunction senderType(compiler) {\n    switch (Compiler.Utils.solidityFamily(compiler)) {\n        case \"unknown\":\n        case \"pre-0.5.0\":\n            return {\n                typeClass: \"address\",\n                kind: \"general\"\n            };\n        case \"0.5.x\":\n            return {\n                typeClass: \"address\",\n                kind: \"specific\",\n                payable: true\n            };\n    }\n}\nfunction externalAddressType(compiler) {\n    switch (Compiler.Utils.solidityFamily(compiler)) {\n        case \"unknown\":\n        case \"pre-0.5.0\":\n            return {\n                typeClass: \"address\",\n                kind: \"general\"\n            };\n        case \"0.5.x\":\n            return {\n                typeClass: \"address\",\n                kind: \"specific\",\n                payable: true\n            };\n    }\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}