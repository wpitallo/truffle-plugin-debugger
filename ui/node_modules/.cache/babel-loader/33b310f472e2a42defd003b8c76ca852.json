{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneNode = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\n\nvar domelementtype_1 = require(\"domelementtype\");\n\nvar nodeTypes = new Map([[domelementtype_1.ElementType.Tag, 1], [domelementtype_1.ElementType.Script, 1], [domelementtype_1.ElementType.Style, 1], [domelementtype_1.ElementType.Directive, 1], [domelementtype_1.ElementType.Text, 3], [domelementtype_1.ElementType.CDATA, 4], [domelementtype_1.ElementType.Comment, 8], [domelementtype_1.ElementType.Root, 9]]);\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\n\nvar Node =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param type The type of the node.\n   */\n  function Node(type) {\n    this.type = type;\n    /** Parent of the node */\n\n    this.parent = null;\n    /** Previous sibling */\n\n    this.prev = null;\n    /** Next sibling */\n\n    this.next = null;\n    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n\n    this.startIndex = null;\n    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n\n    this.endIndex = null;\n  }\n\n  Object.defineProperty(Node.prototype, \"nodeType\", {\n    // Read-only aliases\n    get: function get() {\n      var _a;\n\n      return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"parentNode\", {\n    // Read-write aliases for properties\n    get: function get() {\n      return this.parent;\n    },\n    set: function set(parent) {\n      this.parent = parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"previousSibling\", {\n    get: function get() {\n      return this.prev;\n    },\n    set: function set(prev) {\n      this.prev = prev;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Node.prototype, \"nextSibling\", {\n    get: function get() {\n      return this.next;\n    },\n    set: function set(next) {\n      this.next = next;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Clone this node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n\n  Node.prototype.cloneNode = function (recursive) {\n    if (recursive === void 0) {\n      recursive = false;\n    }\n\n    return cloneNode(this, recursive);\n  };\n\n  return Node;\n}();\n\nexports.Node = Node;\n\nvar DataNode =\n/** @class */\nfunction (_super) {\n  __extends(DataNode, _super);\n  /**\n   * @param type The type of the node\n   * @param data The content of the data node\n   */\n\n\n  function DataNode(type, data) {\n    var _this = _super.call(this, type) || this;\n\n    _this.data = data;\n    return _this;\n  }\n\n  Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n    get: function get() {\n      return this.data;\n    },\n    set: function set(data) {\n      this.data = data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataNode;\n}(Node);\n\nexports.DataNode = DataNode;\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text(data) {\n    return _super.call(this, domelementtype_1.ElementType.Text, data) || this;\n  }\n\n  return Text;\n}(DataNode);\n\nexports.Text = Text;\n\nvar Comment =\n/** @class */\nfunction (_super) {\n  __extends(Comment, _super);\n\n  function Comment(data) {\n    return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;\n  }\n\n  return Comment;\n}(DataNode);\n\nexports.Comment = Comment;\n\nvar ProcessingInstruction =\n/** @class */\nfunction (_super) {\n  __extends(ProcessingInstruction, _super);\n\n  function ProcessingInstruction(name, data) {\n    var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;\n\n    _this.name = name;\n    return _this;\n  }\n\n  return ProcessingInstruction;\n}(DataNode);\n\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\n\nvar NodeWithChildren =\n/** @class */\nfunction (_super) {\n  __extends(NodeWithChildren, _super);\n  /**\n   * @param type Type of the node.\n   * @param children Children of the node. Only certain node types can have children.\n   */\n\n\n  function NodeWithChildren(type, children) {\n    var _this = _super.call(this, type) || this;\n\n    _this.children = children;\n    return _this;\n  }\n\n  Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n    // Aliases\n    get: function get() {\n      var _a;\n\n      return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n    get: function get() {\n      return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n    get: function get() {\n      return this.children;\n    },\n    set: function set(children) {\n      this.children = children;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return NodeWithChildren;\n}(Node);\n\nexports.NodeWithChildren = NodeWithChildren;\n\nvar Document =\n/** @class */\nfunction (_super) {\n  __extends(Document, _super);\n\n  function Document(children) {\n    return _super.call(this, domelementtype_1.ElementType.Root, children) || this;\n  }\n\n  return Document;\n}(NodeWithChildren);\n\nexports.Document = Document;\n\nvar Element =\n/** @class */\nfunction (_super) {\n  __extends(Element, _super);\n  /**\n   * @param name Name of the tag, eg. `div`, `span`.\n   * @param attribs Object mapping attribute names to attribute values.\n   * @param children Children of the node.\n   */\n\n\n  function Element(name, attribs, children, type) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    if (type === void 0) {\n      type = name === \"script\" ? domelementtype_1.ElementType.Script : name === \"style\" ? domelementtype_1.ElementType.Style : domelementtype_1.ElementType.Tag;\n    }\n\n    var _this = _super.call(this, type, children) || this;\n\n    _this.name = name;\n    _this.attribs = attribs;\n    return _this;\n  }\n\n  Object.defineProperty(Element.prototype, \"tagName\", {\n    // DOM Level 1 aliases\n    get: function get() {\n      return this.name;\n    },\n    set: function set(name) {\n      this.name = name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Element.prototype, \"attributes\", {\n    get: function get() {\n      var _this = this;\n\n      return Object.keys(this.attribs).map(function (name) {\n        var _a, _b;\n\n        return {\n          name: name,\n          value: _this.attribs[name],\n          namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n          prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n        };\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Element;\n}(NodeWithChildren);\n\nexports.Element = Element;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\n\nfunction cloneNode(node, recursive) {\n  if (recursive === void 0) {\n    recursive = false;\n  }\n\n  var result;\n\n  switch (node.type) {\n    case domelementtype_1.ElementType.Text:\n      result = new Text(node.data);\n      break;\n\n    case domelementtype_1.ElementType.Directive:\n      {\n        var instr = node;\n        result = new ProcessingInstruction(instr.name, instr.data);\n\n        if (instr[\"x-name\"] != null) {\n          result[\"x-name\"] = instr[\"x-name\"];\n          result[\"x-publicId\"] = instr[\"x-publicId\"];\n          result[\"x-systemId\"] = instr[\"x-systemId\"];\n        }\n\n        break;\n      }\n\n    case domelementtype_1.ElementType.Comment:\n      result = new Comment(node.data);\n      break;\n\n    case domelementtype_1.ElementType.Tag:\n    case domelementtype_1.ElementType.Script:\n    case domelementtype_1.ElementType.Style:\n      {\n        var elem = node;\n        var children = recursive ? cloneChildren(elem.children) : [];\n        var clone_1 = new Element(elem.name, __assign({}, elem.attribs), children);\n        children.forEach(function (child) {\n          return child.parent = clone_1;\n        });\n\n        if (elem[\"x-attribsNamespace\"]) {\n          clone_1[\"x-attribsNamespace\"] = __assign({}, elem[\"x-attribsNamespace\"]);\n        }\n\n        if (elem[\"x-attribsPrefix\"]) {\n          clone_1[\"x-attribsPrefix\"] = __assign({}, elem[\"x-attribsPrefix\"]);\n        }\n\n        result = clone_1;\n        break;\n      }\n\n    case domelementtype_1.ElementType.CDATA:\n      {\n        var cdata = node;\n        var children = recursive ? cloneChildren(cdata.children) : [];\n        var clone_2 = new NodeWithChildren(node.type, children);\n        children.forEach(function (child) {\n          return child.parent = clone_2;\n        });\n        result = clone_2;\n        break;\n      }\n\n    case domelementtype_1.ElementType.Root:\n      {\n        var doc = node;\n        var children = recursive ? cloneChildren(doc.children) : [];\n        var clone_3 = new Document(children);\n        children.forEach(function (child) {\n          return child.parent = clone_3;\n        });\n\n        if (doc[\"x-mode\"]) {\n          clone_3[\"x-mode\"] = doc[\"x-mode\"];\n        }\n\n        result = clone_3;\n        break;\n      }\n\n    case domelementtype_1.ElementType.Doctype:\n      {\n        // This type isn't used yet.\n        throw new Error(\"Not implemented yet: ElementType.Doctype case\");\n      }\n  }\n\n  result.startIndex = node.startIndex;\n  result.endIndex = node.endIndex;\n  return result;\n}\n\nexports.cloneNode = cloneNode;\n\nfunction cloneChildren(childs) {\n  var children = childs.map(function (child) {\n    return cloneNode(child, true);\n  });\n\n  for (var i = 1; i < children.length; i++) {\n    children[i].prev = children[i - 1];\n    children[i - 1].next = children[i];\n  }\n\n  return children;\n}","map":{"version":3,"sources":["/home/warren/environment/consensus bootcamp/truffle-testNft/node_modules/truffle-plugin-debugger/ui/node_modules/domhandler/lib/node.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","cloneNode","Element","Document","NodeWithChildren","ProcessingInstruction","Comment","Text","DataNode","Node","domelementtype_1","require","nodeTypes","Map","ElementType","Tag","Script","Style","Directive","CDATA","Root","type","parent","prev","next","startIndex","endIndex","get","_a","enumerable","configurable","set","recursive","_super","data","_this","name","children","attribs","keys","map","_b","namespace","prefix","node","result","instr","elem","cloneChildren","clone_1","forEach","child","cdata","clone_2","doc","clone_3","Doctype","Error","childs"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneNode = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar domelementtype_1 = require(\"domelementtype\");\nvar nodeTypes = new Map([\n    [domelementtype_1.ElementType.Tag, 1],\n    [domelementtype_1.ElementType.Script, 1],\n    [domelementtype_1.ElementType.Style, 1],\n    [domelementtype_1.ElementType.Directive, 1],\n    [domelementtype_1.ElementType.Text, 3],\n    [domelementtype_1.ElementType.CDATA, 4],\n    [domelementtype_1.ElementType.Comment, 8],\n    [domelementtype_1.ElementType.Root, 9],\n]);\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    /**\n     *\n     * @param type The type of the node.\n     */\n    function Node(type) {\n        this.type = type;\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"nodeType\", {\n        // Read-only aliases\n        get: function () {\n            var _a;\n            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param type The type of the node\n     * @param data The content of the data node\n     */\n    function DataNode(type, data) {\n        var _this = _super.call(this, type) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text(data) {\n        return _super.call(this, domelementtype_1.ElementType.Text, data) || this;\n    }\n    return Text;\n}(DataNode));\nexports.Text = Text;\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment(data) {\n        return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;\n    }\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\n/**\n * A `Node` that can have children.\n */\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     * @param type Type of the node.\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(type, children) {\n        var _this = _super.call(this, type) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document(children) {\n        return _super.call(this, domelementtype_1.ElementType.Root, children) || this;\n    }\n    return Document;\n}(NodeWithChildren));\nexports.Document = Document;\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children, type) {\n        if (children === void 0) { children = []; }\n        if (type === void 0) { type = name === \"script\"\n            ? domelementtype_1.ElementType.Script\n            : name === \"style\"\n                ? domelementtype_1.ElementType.Style\n                : domelementtype_1.ElementType.Tag; }\n        var _this = _super.call(this, type, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) {\n                var _a, _b;\n                return ({\n                    name: name,\n                    value: _this.attribs[name],\n                    namespace: (_a = _this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                    prefix: (_b = _this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    var result;\n    switch (node.type) {\n        case domelementtype_1.ElementType.Text:\n            result = new Text(node.data);\n            break;\n        case domelementtype_1.ElementType.Directive: {\n            var instr = node;\n            result = new ProcessingInstruction(instr.name, instr.data);\n            if (instr[\"x-name\"] != null) {\n                result[\"x-name\"] = instr[\"x-name\"];\n                result[\"x-publicId\"] = instr[\"x-publicId\"];\n                result[\"x-systemId\"] = instr[\"x-systemId\"];\n            }\n            break;\n        }\n        case domelementtype_1.ElementType.Comment:\n            result = new Comment(node.data);\n            break;\n        case domelementtype_1.ElementType.Tag:\n        case domelementtype_1.ElementType.Script:\n        case domelementtype_1.ElementType.Style: {\n            var elem = node;\n            var children = recursive ? cloneChildren(elem.children) : [];\n            var clone_1 = new Element(elem.name, __assign({}, elem.attribs), children);\n            children.forEach(function (child) { return (child.parent = clone_1); });\n            if (elem[\"x-attribsNamespace\"]) {\n                clone_1[\"x-attribsNamespace\"] = __assign({}, elem[\"x-attribsNamespace\"]);\n            }\n            if (elem[\"x-attribsPrefix\"]) {\n                clone_1[\"x-attribsPrefix\"] = __assign({}, elem[\"x-attribsPrefix\"]);\n            }\n            result = clone_1;\n            break;\n        }\n        case domelementtype_1.ElementType.CDATA: {\n            var cdata = node;\n            var children = recursive ? cloneChildren(cdata.children) : [];\n            var clone_2 = new NodeWithChildren(node.type, children);\n            children.forEach(function (child) { return (child.parent = clone_2); });\n            result = clone_2;\n            break;\n        }\n        case domelementtype_1.ElementType.Root: {\n            var doc = node;\n            var children = recursive ? cloneChildren(doc.children) : [];\n            var clone_3 = new Document(children);\n            children.forEach(function (child) { return (child.parent = clone_3); });\n            if (doc[\"x-mode\"]) {\n                clone_3[\"x-mode\"] = doc[\"x-mode\"];\n            }\n            result = clone_3;\n            break;\n        }\n        case domelementtype_1.ElementType.Doctype: {\n            // This type isn't used yet.\n            throw new Error(\"Not implemented yet: ElementType.Doctype case\");\n        }\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    return result;\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n"]},"metadata":{},"sourceType":"script"}