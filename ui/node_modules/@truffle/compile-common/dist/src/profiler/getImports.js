"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getImports = void 0;
const isExplicitlyRelative_1 = require("./isExplicitlyRelative");
function getImports({ source: { filePath, body, source }, shouldIncludePath, parseImports }) {
    return __awaiter(this, void 0, void 0, function* () {
        // No imports in vyper!
        if (!shouldIncludePath(filePath))
            return [];
        const imports = yield parseImports(body);
        // Convert explicitly relative dependencies of modules back into module paths.
        return imports.map(dependencyPath => isExplicitlyRelative_1.isExplicitlyRelative(dependencyPath)
            ? source.resolveDependencyPath(filePath, dependencyPath)
            : dependencyPath);
    });
}
exports.getImports = getImports;
//# sourceMappingURL=getImports.js.map